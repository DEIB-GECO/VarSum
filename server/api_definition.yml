openapi: 3.0.0
info:
  title: Data summarization 1KG
  description: >-
    This API returns summary statistics on user-defined populations and their
    variants, as the ones identified during the 1000 Genomes Project. For more
    information visit the repository tomalf2/data_summarization_1KGP on GitHub
  version: 0.1.0
servers:
  - url: /popstudy/api/
paths:
  /values/{attribute}:
    summary: >-
      The set of values that can be specified
      in the body request of the other endpoints (mutation excluded)
    get:
      summary: Returns the set of values available for the given attribute
      operationId: server.api.values
      parameters:
        - name: attribute
          in: path
          required: true
          description: A comma separated list of the attributes for which one wants to know the values.
          explode: false
          style: simple
          schema:
            type: string
            enum: [assembly, gender, population, super_population, dna_source]
      responses:
        '200':
          description: >-
            A JSON object containing an array of valid values for each requested attribute.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                gender:
                  value:
                    ['male', 'female']
                dna_source:
                  value:
                    ['lcl', 'blood']
        '400':
          description: The parameter does not exists.
        '503':
          description: Internal server error.


  /donor_distribution:
    post:
      operationId: server.api.donor_distribution
      summary: >
        Returns the distribution of the individuals inside a population having the requested characteristics.
      description: >
        Given a set of characteristics (parameters "meta" and "variants"), this method returns the number of the individuals having that features, distributed by the attributes given in "by_attributes".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
              properties:
                distribute_by:
                  $ref: '#/components/schemas/DistributeBy'
                meta:
                  $ref: '#/components/schemas/FilterMetadata'
                variants:
                  $ref: '#/components/schemas/FilterVariants'
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first key is "columns" which is an array telling the names and the order of the columns of the result. The second and last key is an array, where each element is itself an array containing the values for the columns in this object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['gender', 'population', 'donors']
                rows: [['male', 'JPT', 2], ['female', 'ITU', 4]]
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '503':
          description: Internal server error.


  /variant_distribution:
    post:
      operationId: server.api.variant_distribution
      summary: >
        Returns the distribution of a variant inside a population having the required characteristics.
      description: >
        Describes the distribution of a "target_variant" inside the set of individuals having the characteristics in "meta" and "variants". The distribution is shown by the attributes given in "distribute_by", and for each group of individuals, it is returned the number of individuals inside the group, the number of occurrences and the frequency of the variant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
                - target_variant
              properties:
                distribute_by:
                  $ref: '#/components/schemas/DistributeBy'
                meta:
                  $ref: '#/components/schemas/FilterMetadata'
                variants:
                  $ref: '#/components/schemas/FilterVariants'
                target_variant:
                  $ref: '#/components/schemas/Variant'
      responses:
        '200':
          description: >-
            A table represented in a JSON object. The first key is "columns" which is an array telling the names and the order of the columns of the result. The second and last key is an array, where each element is itself an array containing the values for the columns in this object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['gender', 'donors', 'occurrence', 'frequency']
                rows: [['male', 9, 12, 0.666], ['female', 2, 4, 1.0]]
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '503':
          description: Internal server error.


  /most_common_variants:
    post:
      operationId: server.api.most_common_variants
      summary: >-
        Returns a list of the most common variants inside the selected population.
      description: >-
        The given parameters "meta" and "variants" contributes to define a population of individuals having certain characteristics. This method returns the list of the most common variants calculated as the number of occurrences of a variant owned by some of the individuals over the number of total alleles in the population. Furthermore, it is possible to customize the number of rows returned by each genomic data source (default is 10) and filter out the variants with a frequency value greater than a given threshold.

        WARNING: As this operation is very demanding, it is strongly suggested to use it only on a small population size obtained with the help of the "variant" request body parameter. You can check the size of the considered population sending a request with some meta/region constraints to the endpoint /donor_distribution. The estimated execution time is nearly 8 seconds * (number of individuals) up to 333 individuals, and ~45 minutes above such number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
              properties:
                meta:
                  $ref: '#/components/schemas/FilterMetadata'
                variants:
                  $ref: '#/components/schemas/FilterVariants'
                filter_output:
                  type: object
                  properties:
                    max_frequency:
                      type: number
                      example: 0.998
                    limit:
                      type: integer
                      example: 10
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The item ("columns") is an array of the table column names, which include the identifier of the variant using its coordinates (chrom, start, ref, alt), followed by the number of individuals owning the variant, the occurrence and the frequency. The second is "rows", an array where each item is itself an array representing the values of a single row of the table.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['chrom', 'start', 'ref', 'alt', 'donors', 'occurrence', 'frequency']
                rows: [['1', '10768', 'G', 'T', 8, 16, 1.0], ['1', '102889', '', 'GT', 7, 13, 0,8125]]
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '503':
          description: Internal server error.


  /rarest_variants:
    post:
      operationId: server.api.rarest_variants
      summary: >-
        Returns a list of the rarest variants inside the selected population.
      description: >-
        The given parameters "meta" and "variants" contributes to define a population of individuals having certain characteristics. This method returns the list of the rarest variants calculated as the number of occurrences of a variant owned by some of the individuals over the number of total alleles in the population. Furthermore, it is possible to customize the number of rows returned by each genomic data source (default is 10) and filter out the variants with a frequency value lower than a given threshold.

        WARNING: As this operation is very demanding, it is strongly suggested to use it only on a small population size obtained with the help of the "variant" request body parameter. You can check the size of the considered population sending a request with some meta/region constraints to the endpoint /donor_distribution. The estimated execution time is nearly 8 seconds * (number of individuals) up to 333 individuals, and ~45 minutes above such number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - meta
              properties:
                meta:
                  $ref: '#/components/schemas/FilterMetadata'
                variants:
                  $ref: '#/components/schemas/FilterVariants'
                filter_output:
                  type: object
                  properties:
                    min_frequency:
                      type: number
                      example: 0.0099
                    limit:
                      type: integer
                      example: 10

      responses:
        '200':
          description: >-
            A table represented as a JSON object. The item ("columns") is an array of the table column names, which include the identifier of the variant using its coordinates (chrom, start, ref, alt), followed by the number of individuals owning the variant, the occurrence and the frequency. The second is "rows", an array where each item is itself an array representing the values of a single row of the table.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['chrom', 'start', 'ref', 'alt', 'donors', 'occurrence', 'frequency']
                rows: [['1', '10768', 'G', 'T',  2, 3, 0.075‬], ['1', '102889', '', 'GT', 1, 2, 0.05]]
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '503':
          description: Internal server error.

components:
  schemas:
    VariantID:
      type: object
      properties:
        id:
          type: string
      required:
        - id
      example:
        id: rs642251

    VariantCoordinates:
      type: object
      properties:
        chrom:
          type: integer
        start:
          type: integer
        ref:
          type: string
        alt:
          type: string
      required:
        - chrom
        - start
        - ref
        - alt
      example:
        chrom: 1
        start: 176541
        ref: G
        alt: C

    Variant:
      oneOf:
        - $ref: '#/components/schemas/VariantID'
        - $ref: '#/components/schemas/VariantCoordinates'

    FilterMetadata:
      type: object
      properties:
        gender:
          type: string
        dna_source:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        assembly:
          type: string
        population:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        super_population:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        health_status:
          type: string
      required:
        - assembly

    FilterVariants:
      type: object
      minProperties: 1
      properties:
        with:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'
        on_same_chrom_copy:
          type: array
          minItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'
        on_diff_chrom_copy:
          type: array
          minItems: 2
          maxItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'

    DistributeBy:
      type: array
      items:
        type: string
        enum: [gender, population, super_population, dna_source, health_status]