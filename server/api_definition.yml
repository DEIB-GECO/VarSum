openapi: 3.0.0
info:
  title: Data summarization 1KG
  description: >-
    This API returns summary statistics on user-defined populations and their
    variants.


    Available data include gene annotations, germline variants from the 1000 Genomes Project and  somatic mutations collected by The Cancer Genomes Atlas Program.


      ## Additional Resources
      - [List of the abbreviations used in the data sources](https://github.com/tomalf2/data_summarization_1KGP#abbreviations-and-terms)
      - [Python Notebooks demo](https://github.com/tomalf2/data_summarization_1KGP/tree/master/demo)
      - [GitHub project repository](https://github.com/tomalf2/data_summarization_1KGP#data_summarization_1kgp)
      ## How to
      - [(video) Exploring the documentation ](https://polimi365-my.sharepoint.com/:v:/g/personal/10435046_polimi_it/ESEAJhaYj-FHh3AfcVYkp0wBDcI7djdLQm_twsIdjSpdTw?e=qMKfkY)
      - [(video) Try the API by yourself](https://polimi365-my.sharepoint.com/:v:/g/personal/10435046_polimi_it/ETN9_W7Z9xtMpg4l0UwfzTwBcDKvFkJ1eUKxGOcEvQGzIw?e=R9YFnZ)
  version: 0.3.0
servers:
  - url: /popstudy/api/
paths:
  /values/{attribute}:
    summary: >-
      The set of values that can be used for a given attribute.
    get:
      summary: Returns the set of values available for the given attribute
      operationId: server.api.values
      parameters:
        - name: attribute
          in: path
          required: true
          description: The name of the attribute of which you want to know the values.
          explode: false
          style: simple
          schema:
            type: string
            enum: [assembly, gender, population, super_population, dna_source, health_status, gene_type, ethnicity]
      responses:
        '200':
          description: >-
            A JSON object containing an array of valid values for each requested attribute.
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    $ref: '#/components/schemas/GenomicSource'
              examples:
                gender:
                  value:
                    female:
                      ['1000Genomes', 'TCGA']
                    male:
                      ['1000Genomes', 'TCGA']
                    not_reported:
                      ['TCGA']
                dna_source:
                  value:
                    blood:
                      ['1000Genomes']
                    lcl:
                      ['1000Genomes']
        '400':
          description: The parameter does not exists.
        '503':
          description: Internal server error.


  /donor_distribution:
    post:
      operationId: server.api.donor_distribution
      summary: >
        Returns the distribution of the individuals inside a population having the requested characteristics.
      description: >
        Given a set of characteristics (parameters "having_meta" and "having_variants"), this method returns the number of the individuals having that features, distributed by the attributes given in "distribute_by".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - having_meta
                - distribute_by
              properties:
                source:
                  $ref: '#/components/schemas/GenomicSource'
                distribute_by:
                  $ref: '#/components/schemas/DistributeBy'
                donors_download_url:
                  type: boolean
                having_meta:
                  $ref: '#/components/schemas/FilterMetadata'
                having_variants:
                  $ref: '#/components/schemas/FilterVariants'
            examples:
              East Asian with variant rs367896724 by gender:
                value:
                  distribute_by: [gender]
                  having_meta:
                    assembly: hg19
                    super_population: [EAS]
                    health_status: 'true'
                  having_variants:
                    with: [id: rs367896724]
              Europeans with any variant in gene DDX11L1 by population:
                value:
                  distribute_by: [population]
                  having_meta:
                    assembly: hg19
                    super_population: [EUR]
                    health_status: 'true'
                  having_variants:
                    in:
                      name: DDX11L1
                      type: pseudogene
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first key is "columns" which is an array telling the names and the order of the columns of the result. The second and last key is an array, where each element is itself an array containing the values for the columns in this object.

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['GENDER', 'DONORS']
                rows: [['female', 164], ['male', 139]]
        '300':
          description: Multiple genes match the given information. Please add further details like the gene type or, even better, the gene ensemble id in order to reduce the ambiguity.
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The given gene is not present in our database.
        '503':
          description: Internal server error.


  /variant_distribution:
    post:
      operationId: server.api.variant_distribution
      summary: >
        Returns the distribution of a variant inside a population having the required characteristics.
      description: >
        Describes the distribution of a "target_variant" inside the set of individuals having the characteristics in "having_meta" and "having_variants". The distribution is shown by the attributes given in "distribute_by", and for each group of individuals, it is returned the number of individuals inside the group, the number of occurrences and the frequency of the variant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - having_meta
                - distribute_by
                - target_variant
              properties:
                source:
                  $ref: '#/components/schemas/GenomicSource'
                distribute_by:
                  $ref: '#/components/schemas/DistributeBy'
                having_meta:
                  $ref: '#/components/schemas/FilterMetadata'
                having_variants:
                  $ref: '#/components/schemas/FilterVariants'
                target_variant:
                  $ref: '#/components/schemas/Variant'
            examples:
              Distribution by population of variant rs367896724 in East Asian females having variants in genomic interval:
                value:
                  distribute_by: [population]
                  having_meta:
                    assembly: hg19
                    super_population: [EAS]
                    health_status: 'true'
                    gender: female
                  having_variants:
                    in:
                      chrom: 1
                      start: 29000
                      stop: 34000
                  target_variant:
                    id: rs367896724
              Distribution by population of variant rs367896724 in East Asian females having variant 1-10351--A:
                value:
                  distribute_by: [population]
                  having_meta:
                    assembly: hg19
                    super_population: [EAS]
                    health_status: 'true'
                    gender: female
                  having_variants:
                    with: [{chrom: 1, start: 10351, ref: "", alt: "A"}]
                  target_variant:
                    id: rs367896724
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first key is "columns" which is an array telling the names and the order of the columns of the result. The second and last key is an array, where each element is itself an array containing the values for the columns in this object.

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['POPULATION', 'POPULATION_SIZE', 'POSITIVE_DONORS', 'OCCURRENCE_OF_TARGET_VARIANT', 'FREQUENCY']
                rows: [['KHV', 53, 32, 34, 0.32075471698113206], ['CHB', 57, 42, 43, 0.37719298245614036]]
        '300':
          description: Multiple genes match the given information. Please add further details like the gene type or, even better, the gene ensemble id in order to reduce the ambiguity.
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The given gene is not present in our database.
        '503':
          description: Internal server error.


  /most_common_variants:
    post:
      operationId: server.api.most_common_variants
      summary: >-
        Returns a list of the most common variants inside the selected population.
      description: >-
        The parameters "having_meta" and "having_variants" contribute to define a population of individuals having certain characteristics. This method returns the list of the most common variants calculated as the number of occurrences of a variant owned by some of the individuals over the number of total alleles in the population. Furthermore, it is possible to limit the number of rows returned by each genomic data source (default is 10) and filter out the variants with a frequency value greater than a given threshold.

          __WARNING: As this operation is very demanding, it is strongly suggested to use it only on a small population size. You can check the size of the considered population sending a request with some meta/region constraints to the endpoint /donor_distribution. The estimated execution time is nearly 8 seconds * (number of individuals) up to 149 individuals, and ~45 minutes above such number.__
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - having_meta
                - having_variants
              properties:
                source:
                  $ref: '#/components/schemas/GenomicSource'
                having_meta:
                  $ref: '#/components/schemas/FilterMetadata'
                having_variants:
                  $ref: '#/components/schemas/FilterVariants'
                filter_output:
                  type: object
                  properties:
                    max_frequency:
                      type: number
                      example: 0.998
                    limit:
                      type: integer
                      example: 10
            examples:
              Most common variants below 99.8% in females from Bangladesh having variants 1-13271-G-C and rs367896724:
                value:
                  filter_output:
                    limit: 5
                    max_frequency: 0.998
                  having_meta:
                    assembly: hg19
                    population: [BEB]
                    health_status: 'true'
                    gender: female
                  having_variants:
                    with: [{chrom: 1, start: 13271, ref: "G", alt: "C"}, {id: rs367896724}]

      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first item ("columns") is an array of the table column names, which includes the identifier of the variant using its coordinates (chrom, start, ref, alt), followed by the size of the population considered, the number of individuals owning the variant, the occurrence and the frequency. The second item ("rows") is an array where each element is itself an array representing the values making a row of the table.

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:

                columns: ['CHROM', 'START', 'REF', 'ALT', 'POPULATION_SIZE', 'POSITIVE_DONORS', 'OCCURRENCE_OF_VARIANT', 'FREQUENCY_OF_VARIANT']
                rows: [['1', '10768', 'G', 'T', 11, 8, 16, 0.727272], ['1', '102889', '', 'GT', 11, 8, 13, 0.590909]]
        '300':
          description: Multiple genes match the given information. Please add further details like the gene type or, even better, the gene ensemble id in order to reduce the ambiguity.
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The given gene is not present in our database.
        '503':
          description: Internal server error.


  /rarest_variants:
    post:
      operationId: server.api.rarest_variants
      summary: >-
        Returns a list of the rarest variants inside the selected population.
      description: >-
        The parameters "having_meta" and "having_variants" contribute to define a population of individuals having certain characteristics. This method returns the list of the rarest variants calculated as the number of occurrences of a variant owned by some of the individuals over the number of total alleles in the population. Furthermore, it is possible to limit the number of rows returned by each genomic data source (default is 10) and filter out the variants with a frequency value lower than a given threshold.

          __WARNING: As this operation is very demanding, it is strongly suggested to use it only on a small population size. You can check the size of the considered population sending a request with some meta/region constraints to the endpoint /donor_distribution. The estimated execution time is nearly 8 seconds * (number of individuals) up to 149 individuals, and ~45 minutes above such number.__
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - having_meta
                - having_variants
              properties:
                source:
                  $ref: '#/components/schemas/GenomicSource'
                having_meta:
                  $ref: '#/components/schemas/FilterMetadata'
                having_variants:
                  $ref: '#/components/schemas/FilterVariants'
                filter_output:
                  type: object
                  properties:
                    min_frequency:
                      type: number
                      example: 0.0099
                    limit:
                      type: integer
                      example: 10
            examples:
              Rarest variants above 0.99% in females from Bangladesh having variants 1-13271-G-C and rs367896724:
                value:
                  filter_output:
                    limit: 5
                    min_frequency: 0.0099
                  having_meta:
                    assembly: hg19
                    population: [BEB]
                    health_status: 'true'
                    gender: female
                  having_variants:
                    with: [{chrom: 1, start: 13271, ref: "G", alt: "C"}, {id: rs367896724}]

      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first item ("columns") is an array of the table column names, which includes the identifier of the variant using its coordinates (chrom, start, ref, alt), followed by the size of the population considered, the number of individuals owning the variant, the occurrence and the frequency. The second item ("rows") is an array where each element is itself an array representing the values making a row of the table.

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['CHROM', 'START', 'REF', 'ALT', 'POPULATION_SIZE', 'POSITIVE_DONORS', 'OCCURRENCE_OF_VARIANT', 'FREQUENCY_OF_VARIANT']
                rows: [[1,  76836,  'T',  'G',  22,  1,  1,  0.022727], [1,  77872,  'G',  'A',  22,  1,  1,  0.05987]]
        '300':
          description: Multiple genes match the given information. Please add further details like the gene type or, even better, the gene ensemble id in order to reduce the ambiguity.
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The given gene is not present in our database.
        '503':
          description: Internal server error.


  /annotate:
    post:
      operationId: server.api.annotate
      summary: >-
        Returns the list of genes overlapping - even only partially - with a genomic region or variant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - oneOf:
                  - $ref: '#/components/schemas/Variant'
                  - $ref: '#/components/schemas/GenomicInterval'
                - type: object
                  properties:
                    assembly:
                      type: string
                      enum: ['hg19', 'grch38']
                  required:
                    - assembly
            examples:
              Annotate variant having coordinates:
                value:
                  assembly: hg19
                  chrom: 1
                  start: 13271
                  ref: "G"
                  alt: "C"
              Annotate variant having id:
                value:
                  assembly: hg19
                  id: rs568927205
              Annotate genomic interval:
                value:
                  assembly: hg19
                  chrom: 1
                  start: 29500
                  stop: 50000
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first item ("columns") is an array of the table column names: chromosome, start, stop, strand, gene name and gene type. The second is "rows", an array where each item is itself an array representing the values making a row of the table.

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['CHROM', 'START', 'STOP', 'STRAND', 'GENE_NAME', 'GENE_TYPE']
                rows: [[1, 29553, 31109, 1, 'MIR1302-11', 'lincRNA'], [1, 34553, 46081, -1, 'FAM138A', 'lincRNA']]
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The variant specified is not present in our database.
        '503':
          description: Internal server error.


  /variants_in_region:
    post:
      operationId: server.api.variants_in_region
      summary: >-
        Returns the list of variants falling in the area of interest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - oneOf:
                  - $ref: '#/components/schemas/Gene'
                  - $ref: '#/components/schemas/GenomicInterval'
                - type: object
                  properties:
                    assembly:
                      type: string
                      enum: ['hg19', 'grch38']
                    source:
                      $ref: '#/components/schemas/GenomicSource'
                  required:
                    - assembly
            examples:
              Variants overlapping with gene:
                value:
                  assembly: hg19
                  name: DDX11L1
                  type: pseudogene
              Variants located in genomic region:
                value:
                  assembly: hg19
                  chrom: 1
                  start: 29500
                  stop: 50000
      responses:
        '200':
          description: >-
            A table represented as a JSON object. The first item ("columns") is an array of the table column names: chromosome, start, reference and alternative alleles. The second is "rows", an array where each item is itself an array representing a variant according to the properties in "columns".

              Note: The response example below is only a demonstration of the output syntax and do not necessarily reflect any of the example requests listed for this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  columns:
                    type: array
                    items:
                      type: string
                  rows:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
              example:
                columns: ['CHROM', 'START', 'REF', 'ALT']
                rows: [[17, 61554458, 'G', 'T'], [17, 61554492, '', 'GCTGCC']]
        '300':
          description: Multiple genes match the given information. Please add further details like the gene type or, even better, the gene ensemble id in order to reduce the ambiguity.
        '400':
          description: Syntax error in the request body section. It could be caused by a mispelled body or an incomplete variant description.
        '404':
          description: The given gene is not present in our database.
        '503':
          description: Internal server error.


components:
  schemas:
    VariantID:
      type: object
      properties:
        id:
          type: string
      required:
        - id

    VariantCoordinates:
      type: object
      properties:
        chrom:
          type: integer
        start:
          type: integer
        ref:
          type: string
        alt:
          type: string
      required:
        - chrom
        - start
        - ref
        - alt

    Variant:
      oneOf:
        - $ref: '#/components/schemas/VariantID'
        - $ref: '#/components/schemas/VariantCoordinates'

    FilterMetadata:
      type: object
      properties:
        gender:
          type: string
        dna_source:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        assembly:
          type: string
        population:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        super_population:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        ethnicity:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
        health_status:
          type: string
      required:
        - assembly

    FilterVariants:
      type: object
      minProperties: 1
      properties:
        with:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'
        on_same_chrom_copy:
          type: array
          minItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'
        on_diff_chrom_copy:
          type: array
          minItems: 2
          maxItems: 2
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Variant'
        in:
          oneOf:
            - $ref: '#/components/schemas/GenomicInterval'
            - $ref: '#/components/schemas/Gene'
        in_cell_type:
          type: array
          items:
            type: string
            enum: [germline, somatic]

    DistributeBy:
      type: array
      items:
        type: string
        enum: [gender, population, super_population, dna_source, health_status, ethnicity]

    GenomicInterval:
      type: object
      properties:
        chrom:
          type: integer
        start:
          type: integer
        stop:
          type: integer
        strand:
          type: integer
          enum: [1, -1]
      required:
        - chrom
        - start
        - stop

    Gene:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        ensemble_id:
          type:
            string
      required:
        - name

    GenomicSource:
      type: array
      items:
        type: string
        enum: [1000Genomes, TCGA]